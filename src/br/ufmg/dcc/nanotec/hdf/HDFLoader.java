package br.ufmg.dcc.nanotec.hdf;

import java.awt.image.BufferedImage;
import java.io.File;
import java.lang.reflect.Field;

import ncsa.hdf.object.ScalarDS;
import ncsa.hdf.object.h5.H5File;

public class HDFLoader {
	
	private static final int[] DK_BLUE_RED = new int[]{-16252876,-16187337,-16121798,-16056259,-15990720,-15859644,-15794105,-15728566,-15663026,-15597487,-15531947,-15531944,-15466405,-15400866,-15269791,-15204252,-15204248,-15138708,-15138705,-15073166,-15073163,-15073160,-15073157,-15007617,-15007613,-15007610,-14942071,-15007604,-15073136,-15073133,-15073130,-15073127,-15138659,-15138656,-15138653,-15138649,-15204182,-15204179,-15269712,-15269709,-15269705,-15269701,-15335234,-15335231,-15400764,-15466297,-15531829,-15597362,-15597358,-15662891,-15793960,-15859493,-15925025,-16056094,-16121627,-16252696,-16318228,-16449297,-16514830,-16580362,-16514312,-16382215,-16250119,-16118022,-15986181,-15854084,-15721988,-15589891,-15392002,-15128577,-14865409,-14601985,-14272769,-14009345,-13745921,-13548033,-13284609,-13021185,-12757761,-12428801,-12165633,-11902209,-11638785,-11375617,-11111937,-10914049,-10716673,-10453505,-10190337,-9927169,-9663745,-9334785,-9071617,-8808449,-8545281,-8347649,-8084737,-7887105,-7623937,-7360769,-7097601,-6768897,-6505985,-6243073,-5979905,-5716993,-5454081,-5191169,-4928257,-4665345,-4402689,-4074241,-3811073,-3548161,-3285249,-3022337,-2759425,-2496769,-2299393,-2102017,-1839105,-1576449,-1313793,-1051137,-854017,-591361,-394241,-197122,-66052,-1031,-1546,-2062,-2577,-3093,-3609,-4125,-4897,-5668,-6439,-6955,-7727,-8499,-9271,-10043,-11071,-11844,-12360,-13132,-13904,-14676,-15448,-16220,-17248,-18020,-18792,-19821,-20849,-21877,-22905,-23932,-24704,-25731,-26759,-27787,-28815,-30100,-31384,-32412,-33440,-34468,-35239,-36522,-38062,-39090,-40374,-41658,-42686,-43971,-45255,-46539,-47823,-49106,-50390,-51674,-53215,-54499,-55527,-122347,-189166,-255728,-256754,-323316,-389622,-456184,-457210,-523772,-655357,-917500,-1114107,-1310713,-1572856,-1769462,-1966069,-2162675,-2424818,-2621425,-2818031,-3014638,-3276782,-3473389,-3735532,-3932139,-4128746,-4325354,-4521961,-4784105,-5046249,-5242857,-5439464,-5636072,-5832679,-6094823,-6291431,-6488039,-6750182,-6946790,-7143398,-7340006,-7602149,-7798756,-7995365,-8191973,-8454117,-8716262,-8912870,-9109478,-9306086,-9502695,-9699303,-9961448,-10223592,-10420201,-10616811,-10813420,-11010029,-11206637,-11468782,-11665391,-11862000,-12058609,-12255218,-12451828,-12648437,-12845046,-13041655,-13172728};
	
	static {
		try {
			System.setProperty( "java.library.path",new File(HDFLoader.class.getResource("lib/libjhdf5.so").toURI()).getParent());
			Field fieldSysPath = ClassLoader.class.getDeclaredField( "sys_paths" );
			fieldSysPath.setAccessible(true);
			fieldSysPath.set(null,null);
		} catch (Exception e){
			throw new RuntimeException("Failed to set native libraries path",e);
		}
	}
	
	public static ScalarDS getDataset(File file) throws Exception{
		H5File h5File = new H5File(file.getAbsolutePath());
		ScalarDS scalar =  (ScalarDS) h5File.get("ez");
		scalar.getData(); // loads data b4 close file
		h5File.close();
		return scalar;
	}
	
	public static BufferedImage getPicture(ScalarDS dataset, double range) throws Exception{
		double[] data = (double[]) dataset.getData();
		BufferedImage image = new BufferedImage(dataset.getHeight(),dataset.getWidth(), BufferedImage.TYPE_INT_BGR);
		int top = (DK_BLUE_RED.length-1);
		double factor = top/(range*2);
		int k = 0;
		for(int i = 0; i < dataset.getHeight();i++){
			for(int j = 0; j< dataset.getWidth();j++){
				int index = (int) ((data[k++]+range)*factor);
				index = index<0?0:index>top?top:index;
				image.setRGB(i, j, DK_BLUE_RED[index]);
			}
		}
		return image;
	}

}
